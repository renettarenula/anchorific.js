// src/pages/home.js
import React from "react";
import Layout from "../components/Layout";
import styled from "@emotion/styled";
import Heart from "~/src/assets/Heart.svg";
import Thai from "~/src/assets/Thai.svg";
import Malaysia from "~/src/assets/Malaysia.svg";
import StaticContent from "../components/StaticContent.js";
import Prism from "prismjs";

const Content = styled.div`
  margin: auto;
  max-width: 900px;
  color: #fff;
  padding: 0 1.2rem;

  @media (min-width: 1300px) {
    color: #333;
    flex: 1 0 100%;
    width: 100%;
    max-width: none;
    margin-left: 100px;
    padding: 1.2rem;
  }
`;

const Header = styled.h1`
  font-weight: bold;
  font-size: 1.8rem;
  letter-spacing: 2px;
  margin-bottom: 20px;
`;

const H2 = styled.h2`
  font-weight: bold;
  font-size: 1.6rem;
  letter-spacing: 2px;
  margin-bottom: 20px;
  line-height: 1.5;
`;

const H3 = styled.h3`
  font-weight: bold;
  font-size: 1.3rem;
  letter-spacing: 2px;
  margin-bottom: 20px;
  line-height: 1.5;
`;

const P = styled.p`
  line-height: 1.5;
  margin-bottom: 20px;
  font-weight: 300;

  &.strong {
    font-weight: bold;
  }

  &.mobile-notice {
    display: block;

    @media (min-width: 1300px) {
      display: none;
    }
  }

  &.desktop-notice {
    display: none;

    @media (min-width: 1300px) {
      display: block;
    }
  }
`;

const A = styled.a`
  color: #badeff;
  text-decoration: none;

  @media (min-width: 1300px) {
    color: #0684f7;
  }

  &:hover {
    text-decoration: underline;
  }
`;

const Footer = styled.div`
  border-top: 1px solid #02559c;
  padding-top: 10px;
  margin: 30px 0;
  margin-top: 50px;
  letter-spacing: 1px;
  line-height: 1.8;
  text-align: center;

  @media (min-width: 1300px) {
    margin: 0;
    border-top: 1px solid #e0d2b5;
  }
`;

const SmallIcon = styled.i`
  display: inline-block;
  vertical-align: middle;
  padding: 0 3px;
`;

const Index = () => {
  return (
    <Layout>
      <StaticContent>
        <Content>
          <Header>What is it?</Header>
          <P>
            Anchorific is a jQuery plugin that automatically generates anchored
            headings and nested navigations based on header tags.
          </P>

          <P className="mobile-notice">
            Checkout the navigation under the hamburger menu. Active state of
            navigation should change based on where you are on the page. The
            navigation is generated by Anchorific.
          </P>

          <P className="desktop-notice">
            See that sidebar on the left? Its navigation is generated with
            Anchorific and as you scroll, the links will automatically be
            highlighted. See the '#' symbol next to each header? Yup, that's
            generated with Anchorific too!
          </P>

          <Header>Installation</Header>

          <pre className="language-bash">
            <code
              className="language-bash"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `npm install --save anchorific`,
                  Prism.languages.bash,
                  "bash"
                ),
              }}
            ></code>
          </pre>

          <P>
            For a guide on how to using jQuery plugins with npm, check out{" "}
            <A
              href="https://blog.npmjs.org/post/112064849860/using-jquery-plugins-with-npm"
              target="_blank"
              rel="noopener"
            >
              this blog by NPM.
            </A>
          </P>
          <P>You can also use CDN:</P>
          <pre className="language-markup">
            <code
              className="language-markup"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `<script src="https://cdnjs.cloudflare.com/ajax/libs/anchorific/0.1.2/min/anchorific.min.js"></script>`,
                  Prism.languages.markup,
                  "markup"
                ),
              }}
            ></code>
          </pre>
          <Header>Getting Started</Header>
          <H2>Basic Usage and Options</H2>
          <P>
            Use the selector where your headings are located under. And then
            just call the anchorific method.
          </P>
          <pre className="language-js">
            <code
              className="language-js"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `$(".content").anchorific();`,
                  Prism.languages.javascript,
                  "javascript"
                ),
              }}
            ></code>
          </pre>
          <P>
            You can call the plugin function with any selector you want as long
            as it adhere to the HTML structure mentioned above. Options
            available are as followed:
          </P>
          <pre className="language-js">
            <code
              className="language-js"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `$(".content").anchorific({
  navigation: ".anchorific", // position of navigation
  headers: "h1, h2, h3, h4, h5, h6", // headers that you wish to target
  speed: 200, // speed of sliding back to top
  anchorClass: "anchor", // class of anchor links
  anchorText: "#", // prepended or appended to anchor headings
  top: ".top", // back to top button or link class
  spy: true, // scroll spy
  position: "append", // position of anchor text
  spyOffset: 0, // specify heading offset for spy scrolling
  navElements: [], // if there are other elements that should act as navigation, add classes here
});`,
                  Prism.languages.javascript,
                  "javascript"
                ),
              }}
            ></code>
          </pre>
          <P>
            Generating navigations, Scroll spy, and 'Back to top' functionality
            can be disable by assigning false value to the options.
          </P>
          <H3>Adding 'Back to Top' Button</H3>
          <P>
            Just add an element with class top. You can use other class names
            but it should be specified in the plugin options.
          </P>
          <pre className="language-markup">
            <code
              className="language-markup"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `<a href="#top" class="top">Scroll to top</a>`,
                  Prism.languages.markup,
                  "markup"
                ),
              }}
            ></code>
          </pre>
          <P>
            The speed of the scrolling effect can be adjusted by specifying it
            in the options above.
          </P>

          <P className="strong">
            Note: remember to add display: none; to the .top styling. It should
            not be visible when the page first load.
          </P>

          <H2>HTML Structure</H2>
          <P>
            You should not skip a level when structuring header tags. H1 should
            be followed by H2, H2 should be followed by H3 and so on. Anchorific
            relies heavily on this particular structure when generating the
            anchor navigation.
          </P>
          <pre className="language-markup">
            <code
              className="language-markup"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `<h1>The Lannisters</h1>
<h2>Tywin Lanister</h2>
<h2>Cersei Lannister</h2>
<h3>Joffrey Baratheon</h3>
<h3>Myrcella Baratheon</h3>
<h3>Tommen Baratheon</h3>
<h2>Jaime Lannister</h2>
<h2>Tyrion Lannister</h2>`,
                  Prism.languages.markup,
                  "markup"
                ),
              }}
            ></code>
          </pre>
          <P>
            Based on the HTML markup above, the plugin will generate nested
            navigations like this one:
          </P>
          <pre className="language-markup">
            <code
              className="language-markup"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `<ul>
  <li data-tag="1">
    <a href="#the-lannisters">The Lannisters</a>
    <ul>
      <li data-tag="2"><a href="#tywin-lannister">Tywin Lannister</a></li>
      <li data-tag="2">
        <a href="#cersei-lannister">Cersei Lannister</a>
        <ul>
          <li data-tag="3">
            <a href="#joffrey-baratheon">Joffrey Baratheon</a>
          </li>
          <li data-tag="3">
            <a href="#myrcella-baratheon">Myrcella Baratheon</a>
          </li>
          <li data-tag="3"><a href="#tommen-baratheon">Tommen Baratheon</a></li>
        </ul>
      </li>
      <li data-tag="2"><a href="#jaime-lannister">Jaime Lannister</a></li>
      <li data-tag="2"><a href="#tyrion-lannister">Tyrion Lannister</a></li>
    </ul>
  </li>
</ul>`,
                  Prism.languages.markup,
                  "markup"
                ),
              }}
            ></code>
          </pre>
          <P>...and it will generate anchored headings like this one:</P>
          <pre className="language-markup">
            <code
              className="language-markup"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `<h1>Tywin Lannister</h1>
<!-- This would be turn to -->
<h1 id="tywin-lannister">
  Tywin Lannister <a href="#tywin-lannister" class="anchor">#</a>
</h1>`,
                  Prism.languages.markup,
                  "markup"
                ),
              }}
            ></code>
          </pre>
          <H3>Existing ID</H3>
          <P>Any existing ID will be preserved by the plugin:</P>
          <pre className="language-markup">
            <code
              className="language-markup"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `<h3 id="what-if-I-already-have-an-id">What about existing ID?</h3>
<!-- This would be turn to -->
<h3 id="what-if-I-already-have-an-id">
  What about existing ID?<a href="#what-if-I-already-have-an-id" class="anchor">#</a>
</h3>`,
                  Prism.languages.markup,
                  "markup"
                ),
              }}
            ></code>
          </pre>
          <H3>Generate Navigation</H3>
          <P>
            Include a div or a nav section where you want the unordered list of
            anchor navigation to be appended at:
          </P>
          <pre className="language-markup">
            <code
              className="language-markup"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `<nav class="anchorific"></nav>`,
                  Prism.languages.markup,
                  "markup"
                ),
              }}
            ></code>
          </pre>
          <P>
            By default, the plugin will append the unordered list under an
            element with class called anchorific. If you wish to use another
            class name, you need to specify it in the plugin's option.
          </P>
          <H2>CSS</H2>
          <P>
            The nested navigation can be styled easily. Below are the selectors
            you can use in order to style the generated navigation.
          </P>
          <pre className="language-css">
            <code
              className="language-css"
              dangerouslySetInnerHTML={{
                __html: Prism.highlight(
                  `.anchorific {}
.anchorific ul {}
.anchorific ul li a {}
.anchorific li ul {}
/* active class is generated by the scrollspy */ .anchorific
li.active > a {}
.anchorific li.active > ul {}`,
                  Prism.languages.css,
                  "css"
                ),
              }}
            ></code>
          </pre>
          <P>
            You can use the CSS provided with the library and override the
            styling.
          </P>
        </Content>
        <Content>
          <Footer>
            Made with{" "}
            <SmallIcon>
              <Heart width="20px" height="20px" alt="love" />
            </SmallIcon>{" "}
            in{" "}
            <SmallIcon>
              {" "}
              <Thai width="20px" alt="Thailand" />
            </SmallIcon>{" "}
            and{" "}
            <SmallIcon>
              {" "}
              <Malaysia width="20px" alt="Malaysia" />
            </SmallIcon>{" "}
            by{" "}
            <A href="https://aysha.me" target="_blank" rel="noopener">
              Aysha Anggraini
            </A>{" "}
            while vacationing and looking for a job in 2013 as a fresh graduate.
            Anchor logo illustrated by{" "}
            <A
              href="https://thenounproject.com/viticom19/"
              target="__blank"
              rel="noopener"
            >
              Victor Manuel Hernandez Rouco
            </A>
          </Footer>
        </Content>
      </StaticContent>
    </Layout>
  );
};

export default Index;
